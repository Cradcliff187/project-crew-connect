# Google Cloud Build configuration for secure Cloud Run deployment
# Uses Secret Manager for sensitive data instead of hardcoding

substitutions:
  _SERVICE_NAME: project-crew-connect
  _REGION: us-east5
  _IMAGE_NAME: us-east5-docker.pkg.dev/${PROJECT_ID}/cloud-run-source-deploy/${_SERVICE_NAME}

steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-f'
      - 'Dockerfile'
      - '-t'
      - '${_IMAGE_NAME}:${COMMIT_SHA}'
      - '-t'
      - '${_IMAGE_NAME}:latest'
      - '.'

  # Step 2: Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - '${_IMAGE_NAME}'

  # Step 3: Deploy to Cloud Run with secrets from Secret Manager
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_IMAGE_NAME}:${COMMIT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated' # Allows public access to the service
      - '--port'
      - '8080'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--max-instances'
      - '10'
      - '--min-instances'
      - '1' # Keep at least one instance warm
      - '--service-account'
      - '${_SERVICE_NAME}@${PROJECT_ID}.iam.gserviceaccount.com'
      - '--set-env-vars'
      - 'NODE_ENV=production,SERVER_PORT=8080,SERVICE_NAME=${_SERVICE_NAME},CLOUD_RUN_REGION=${_REGION},GOOGLE_REDIRECT_URI=https://project-crew-connect-1061142868787.us-east5.run.app/auth/google/callback'
      - '--update-secrets'
      - 'SUPABASE_URL=supabase-url:latest'
      - '--update-secrets'
      - 'SUPABASE_ANON_KEY=supabase-anon-key:latest'
      - '--update-secrets'
      - 'SUPABASE_SERVICE_ROLE_KEY=supabase-service-role-key:latest'
      - '--update-secrets'
      - 'GOOGLE_CLIENT_ID=google-client-id:latest'
      - '--update-secrets'
      - 'GOOGLE_CLIENT_SECRET=google-client-secret:latest'
      - '--update-secrets'
      - 'GOOGLE_CALENDAR_PROJECT=google-calendar-project:latest'
      - '--update-secrets'
      - 'GOOGLE_CALENDAR_WORK_ORDER=google-calendar-work-order:latest'
      - '--update-secrets'
      - 'GOOGLE_SERVICE_ACCOUNT_CREDENTIALS=google-service-account-credentials:latest'
      - '--update-secrets'
      - 'GOOGLE_SERVICE_ACCOUNT_EMAIL=google-service-account-email:latest'
      - '--update-secrets'
      - 'GOOGLE_SERVICE_ACCOUNT_KEY_BASE64=google-service-account-credentials:latest'
      - '--update-secrets'
      - 'WEBHOOK_TOKEN=webhook-token:latest'
      - '--update-secrets'
      - 'VITE_GOOGLE_CALENDAR_PROJECTS=vite-google-calendar-projects:latest'
      - '--update-secrets'
      - 'VITE_GOOGLE_CALENDAR_WORK_ORDER=vite-google-calendar-work-order:latest'
      - '--update-secrets'
      - 'WEBHOOK_URL=webhook-url:latest'
      - '--update-secrets'
      - 'GOOGLE_MAPS_API_KEY=google-maps-api-key:latest'
      - '--quiet'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'

# Build timeout
timeout: '1200s'

# Images to be pushed to Artifact Registry
images:
  - '${_IMAGE_NAME}:${COMMIT_SHA}'
  - '${_IMAGE_NAME}:latest'
